###
# Frame.io API v4 - Adobe IMS OAuth 2.0 REST Client Tests
# Compatible avec l'extension REST Client de VS Code
###

# Variables d'environnement
@frameio_base_url = https://api.frame.io/v4
@ims_host = https://ims-na1.adobelogin.com
@client_id = {{$dotenv FRAMEIO_CLIENT_ID}}
@client_secret = {{$dotenv FRAMEIO_CLIENT_SECRET}}
@org_id = {{$dotenv FRAMEIO_ORG_ID}}
@technical_account_id = {{$dotenv FRAMEIO_TECHNICAL_ACCOUNT_ID}}
@account_id = {{$dotenv FRAMEIO_ACCOUNT_ID}}
@workspace_id = {{$dotenv FRAMEIO_WORKSPACE_ID}}

### 1. Authentification Adobe IMS Server-to-Server - Obtenir un token d'accès
# Note: Pour une vraie authentification, vous devez créer un JWT avec votre clé privée
# @name auth
POST {{ims_host}}/ims/token/v3
Content-Type: application/x-www-form-urlencoded
Accept: application/json

grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
&client_id={{client_id}}
&client_secret={{client_secret}}
&assertion=YOUR_JWT_ASSERTION_HERE

### 2. Extraction du token (automatique)
@access_token = {{auth.response.body.access_token}}

### 3. Test de l'authentification - Lister les comptes
# @name accounts
GET {{frameio_base_url}}/accounts
Authorization: Bearer {{access_token}}
Accept: application/json

### 4. Lister les workspaces d'un compte
# @name workspaces
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces
Authorization: Bearer {{access_token}}
Accept: application/json

### 5. Lister les projets d'un workspace
# @name projects
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects
Authorization: Bearer {{access_token}}
Accept: application/json

### 6. Obtenir les détails d'un projet spécifique
# Note: Remplacez PROJECT_ID par un ID réel récupéré de l'étape précédente
@project_id = your_project_id_here
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

### 7. Lister les dossiers racine d'un projet
# @name folders
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/folders
Authorization: Bearer {{access_token}}
Accept: application/json

### 8. Créer un nouveau dossier
# @name create_folder
POST {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/folders
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "name": "UNDLM_TEST_FOLDER",
  "type": "folder"
}

### 9. Créer un placeholder pour upload de fichier
# @name create_placeholder
POST {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/folders/{{create_folder.response.body.id}}/files
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "name": "test_upload.mp4",
  "type": "file",
  "filesize": 1024000,
  "filetype": "video/mp4"
}

### 10. Obtenir les détails d'un fichier
# Note: Utilisez l'ID du fichier créé à l'étape précédente
@file_id = {{create_placeholder.response.body.id}}
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

### 11. Lister les commentaires d'un fichier
# @name comments
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/comments
Authorization: Bearer {{access_token}}
Accept: application/json

### 12. Créer un commentaire sur un fichier
# @name create_comment
POST {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/comments
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "text": "Test comment from REST Client - PostFlow Integration",
  "timestamp": 30.0,
  "annotation": {
    "type": "point",
    "coordinates": [100, 200]
  }
}

### 13. Obtenir les détails d'un commentaire
# @name comment_details
@comment_id = {{create_comment.response.body.id}}
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/comments/{{comment_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

### 14. Répondre à un commentaire
POST {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/comments/{{comment_id}}/replies
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "text": "Reply to test comment - PostFlow Integration"
}

### 15. Test de pagination (avec cursor)
# @name paginated_projects
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects?limit=10
Authorization: Bearer {{access_token}}
Accept: application/json

### 16. Rechercher des fichiers par nom
# @name search_files
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files?name=test
Authorization: Bearer {{access_token}}
Accept: application/json

### 17. Obtenir les métadonnées d'un fichier
GET {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/metadata
Authorization: Bearer {{access_token}}
Accept: application/json

### 18. Mettre à jour les métadonnées d'un fichier
PUT {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/metadata
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "custom_metadata": {
    "scene": "UNDLM_TEST_SCENE",
    "pipeline_version": "v2.0",
    "upload_date": "2024-01-01"
  }
}

### 19. Supprimer un commentaire (nettoyage)
DELETE {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}/comments/{{comment_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

### 20. Supprimer un fichier (nettoyage)
DELETE {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/files/{{file_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

### 21. Supprimer un dossier (nettoyage)
DELETE {{frameio_base_url}}/accounts/{{account_id}}/workspaces/{{workspace_id}}/projects/{{project_id}}/folders/{{create_folder.response.body.id}}
Authorization: Bearer {{access_token}}
Accept: application/json

###
# Notes d'utilisation:
# 1. Assurez-vous d'avoir configuré votre fichier .env avec les variables requises
# 2. Remplacez les valeurs @project_id par des IDs réels
# 3. Exécutez les requêtes dans l'ordre pour les tests de dépendance
# 4. Les requêtes de nettoyage (19-21) suppriment les éléments de test
# 5. Pour tester l'upload réel, utilisez l'URL signée retournée par create_placeholder
###
