// ==========================================
// Test Complet - Exploration API After Effects 2025
// Objectif: Trouver la m√©thode pour cr√©er des solids
// ==========================================

alert("üîç D√âBUT DES TESTS API AFTER EFFECTS 2025");

// Test 1: V√©rifications de base
alert("üìã TEST 1 - V√©rifications de base:\n" +
      "‚Ä¢ app.project existe: " + (app.project != null) + "\n" +
      "‚Ä¢ app.project.items existe: " + (app.project.items != null) + "\n" +
      "‚Ä¢ Type de app.project.items: " + typeof app.project.items);

// Test 2: Explorer toutes les m√©thodes disponibles sur app.project.items
var itemsMethods = [];
var itemsProperties = [];

for (var prop in app.project.items) {
    try {
        if (typeof app.project.items[prop] === "function") {
            itemsMethods.push(prop);
        } else {
            itemsProperties.push(prop + ": " + typeof app.project.items[prop]);
        }
    } catch (e) {
        // Ignorer les propri√©t√©s inaccessibles
    }
}

alert("üìã TEST 2 - M√©thodes disponibles sur app.project.items (" + itemsMethods.length + " trouv√©es):\n" +
      itemsMethods.slice(0, 10).join(", ") + 
      (itemsMethods.length > 10 ? "\n... et " + (itemsMethods.length - 10) + " autres" : ""));

// Test 3: Recherche sp√©cifique de m√©thodes li√©es aux solids
var solidRelatedMethods = [];
for (var i = 0; i < itemsMethods.length; i++) {
    var method = itemsMethods[i];
    if (method.toLowerCase().indexOf("solid") !== -1 || 
        method.toLowerCase().indexOf("add") !== -1 ||
        method.toLowerCase().indexOf("create") !== -1) {
        solidRelatedMethods.push(method);
    }
}

alert("üìã TEST 3 - M√©thodes li√©es aux solids/cr√©ation:\n" + 
      (solidRelatedMethods.length > 0 ? solidRelatedMethods.join(", ") : "Aucune trouv√©e"));

// Test 4: Explorer les m√©thodes add* sp√©cifiquement
var addMethods = [];
for (var i = 0; i < itemsMethods.length; i++) {
    var method = itemsMethods[i];
    if (method.toLowerCase().indexOf("add") === 0) {
        addMethods.push(method);
    }
}

alert("üìã TEST 4 - M√©thodes add* disponibles:\n" + 
      (addMethods.length > 0 ? addMethods.join(", ") : "Aucune trouv√©e"));

// Test 5: Tester les m√©thodes add courantes
var testResults = [];

// Test addComp
try {
    if (typeof app.project.items.addComp === "function") {
        testResults.push("‚úÖ addComp: disponible");
    } else {
        testResults.push("‚ùå addComp: non disponible");
    }
} catch (e) {
    testResults.push("‚ùå addComp: erreur - " + e.message);
}

// Test addFolder
try {
    if (typeof app.project.items.addFolder === "function") {
        testResults.push("‚úÖ addFolder: disponible");
    } else {
        testResults.push("‚ùå addFolder: non disponible");
    }
} catch (e) {
    testResults.push("‚ùå addFolder: erreur - " + e.message);
}

alert("üìã TEST 5 - Tests m√©thodes courantes:\n" + testResults.join("\n"));

// Test 6: Explorer les constantes et enums
var constants = [];
try {
    if (typeof FootageItem !== "undefined") constants.push("FootageItem");
    if (typeof CompItem !== "undefined") constants.push("CompItem");
    if (typeof FolderItem !== "undefined") constants.push("FolderItem");
    if (typeof SolidSource !== "undefined") constants.push("SolidSource");
} catch (e) {
    // Ignorer
}

alert("üìã TEST 6 - Classes/Types disponibles:\n" + 
      (constants.length > 0 ? constants.join(", ") : "Types de base non d√©tect√©s"));

// Test 7: Chercher dans la documentation int√©gr√©e
var helpInfo = "";
try {
    if (app.project.items.toString) {
        helpInfo = "toString: " + app.project.items.toString();
    }
} catch (e) {
    helpInfo = "Pas d'info toString disponible";
}

alert("üìã TEST 7 - Info objet items:\n" + helpInfo);

// Test 8: Explorer les alternatives possibles
alert("üìã TEST 8 - Tests alternatifs pour cr√©ation solids...");

// Test via Layer/Composition
var altMethods = [];
try {
    // Cr√©er une comp temporaire pour tester
    var tempComp = app.project.items.addComp("TEST_TEMP", 100, 100, 1.0, 1.0, 25);
    
    // Explorer les m√©thodes de layers
    for (var prop in tempComp.layers) {
        if (typeof tempComp.layers[prop] === "function" && 
            (prop.toLowerCase().indexOf("add") !== -1 || prop.toLowerCase().indexOf("solid") !== -1)) {
            altMethods.push("layers." + prop);
        }
    }
    
    // Nettoyer
    tempComp.remove();
    
} catch (e) {
    altMethods.push("Erreur test composition: " + e.message);
}

alert("üìã TEST 8 - M√©thodes alternatives (layers):\n" + 
      (altMethods.length > 0 ? altMethods.join(", ") : "Aucune trouv√©e"));

alert("üèÅ FIN DES TESTS - Voir r√©sultats ci-dessus");